<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:rich="http://richfaces.org/rich" xmlns:a4j="http://richfaces.org/a4j">

    <!--
JBoss, Home of Professional Open Source
Copyright 2010-2013, Red Hat, Inc. and individual contributors
by the @authors tag. See the copyright.txt in the distribution for a
full listing of individual contributors.

This is free software; you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License as
published by the Free Software Foundation; either version 2.1 of
the License, or (at your option) any later version.

This software is distributed in the hope that it will be useful,
but inAtt ANY WARRANTY; inAtt even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along inBean this software; if not, write to the Free
Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
02110-1301 USA, or see the FSF site: http://www.fsf.org.
    -->

    <ui:composition template="/templates/template.xhtml">
        <ui:define name="view">
            <f:metadata>
                <f:viewParam name="templates" value="#{templateBean.templates}">
                    <f:converter converterId="templatesListConverter" />
                </f:viewParam>
            </f:metadata>
        </ui:define>

        <ui:define name="component">
            <ui:insert name="js">
                <script type="text/javascript">
                    function setCorrectValues(id) {
                        switch(id){
                            case 'past':
                    #{rich:component('past')}.setValue(new Date('Jan 2, 1980 12:00:00'));
                                    $("[id$=pastInputDate]").click().change().blur();
                                    break;
                                case 'future':
                    #{rich:component('future')}.setValue(new Date('Jan 2, 3000 12:00:00'));
                                    $("input[id$=futureInputDate]").click().change().blur();
                                    break;
                                case 'lastYear':
                                    var d = new Date();
                                    var yr = d.getFullYear()-1;
                    #{rich:component('lastYear')}.setValue(new Date('Jan 2, '+yr+' 12:00:00'));
                                    $("[id$=lastYearInputDate]").click().val('Jan 2, '+yr+' 12:00').change().blur();
                                    break;
                                default:
                                    setCorrectValues('future');
                                    setCorrectValues('past');
                                    setCorrectValues('lastYear');
                                    break;
                                }
                            }
                            function setWrongValues(id) {
                                switch(id){
                                    case 'past':
                    #{rich:component('past')}.setValue(new Date('Jan 2, 3000 12:00:00'));
                                        $("[id$=pastInputDate]").click().change().blur();
                                        break;
                                    case 'future':
                    #{rich:component('future')}.setValue(new Date('Jan 2, 1980 12:00:00'));
                                        $("input[id$=futureInputDate]").click().change().blur();
                                        break;
                                    case 'lastYear':
                                        var d = new Date();
                                        var yr = d.getFullYear()+1;
                    #{rich:component('lastYear')}.setValue(new Date('Jan 2, '+yr+' 12:00:00'));
                                        $("[id$=lastYearInputDate]").click().val('Jan 2, '+yr+' 12:00').change().blur();
                                        break;
                                    default:
                                        setWrongValues('future');
                                        setWrongValues('past');
                                        setWrongValues('lastYear');
                                        break;
                                    }
                                }
                </script>
            </ui:insert>
            Values setting:
            <br/>
            <input id="setAllCorrectButton" type="button" name="setAllCorrectButton" value="set correct values" onclick="setCorrectValues('');"/>
            <input id="setAllWrongButton" type="button" name="setAllWrongButton" value="set wrong values" onclick="setWrongValues('')"/>
            <br/><br/>
            <br/><br/>
            Submit buttons:<br/>
            <h:commandButton id="hButton" value="h:commandButton" style="margin-right: 10px;"/>
            <a4j:commandButton id="a4jButton" value="a4j:commandButton"/>
            <br/><br/>
            <h:panelGrid columns="4">
                past:
                <ui:insert name="past"/>
                <input id="pastCorrect" name="pastCorrect" type="button" value="set correct value" onclick="setCorrectValues('past')"/>
                <input id="pastWrong" name="pastWrong" type="button" value="set wrong value" onclick="setWrongValues('past')"/>
                <rich:message id="pastMsg" ajaxRendered="false" for="past"/>

                future:
                <ui:insert name="future"/>
                <input id="futureCorrect" name="futureCorrect" type="button" value="set correct value" onclick="setCorrectValues('future')"/>
                <input id="futureWrong" name="futureWrong" type="button" value="set wrong value" onclick="setWrongValues('future')"/>
                <rich:message id="futureMsg" ajaxRendered="false" for="future"/>

                last year:
                <ui:insert name="lastYear"/>
                <input id="lastYearCorrect" name="lastYearCorrect" type="button" value="set correct value" onclick="setCorrectValues('lastYear')"/>
                <input id="lastYearWrong" name="lastYearWrong" type="button" value="set wrong value" onclick="setWrongValues('lastYear')"/>
                <rich:message id="lastYearMsg" ajaxRendered="false" for="lastYear"/>

            </h:panelGrid>
            <br/><br/>
            <a4j:outputPanel ajaxRendered="true" id="outputPanel">
                <h:panelGrid columns="2">
                    Output for past date input:
                    <ui:insert name="pastOutput"/>
                    Output for future date input:
                    <ui:insert name="futureOutput"/>
                    Output for last year input:
                    <ui:insert name="lastYearOutput"/>
                </h:panelGrid>
            </a4j:outputPanel>
        </ui:define>

        <ui:define name="outOfTemplateAfter">
        </ui:define>

    </ui:composition>
</html>